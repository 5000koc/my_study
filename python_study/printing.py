# 주석
# 파이썬에서는 #을 붙여서 나타냄
# vscode 단축키 ctrl + /

# print("1 + 2 =", 1 + 2) # 1 + 2의 결과를 출력
# print("1 - 2 =", 1 - 2) # 1 - 2의 결과를 출력
# print("1 * 2 =", 1 * 2) # 1 * 2의 결과를 출력
# print("1 / 2 =", 1 / 2) # 1 / 2의 결과를 출력
# print("2 ** 3 =", 2 ** 3) # ** 제곱의 의미
# print("3 / 2 =", 3 / 2)
# print("3 // 2 =", 3 // 2) # 몫을 얻을 때 소숫점을 버릴 때?
# print("3 % 2 =", 3 % 2)

# python 연산자
# + 더하기 연산자
# - 빼기 연산자
# * 곱하기 연산자
# / 나누기 연산자
# ** 제곱 연산자
# // 정수 나누기(몫) 연산자
# % 나머지 연산자
# 위의 문자들을 모두 산술연산자라고 한다
# 피연산자는 위의 구조에서는 숫자
# "" 는 문자로 인식 및 사용 '' 도 가능
# 위의 수식같은 것을 문자형 연산

print("안녕하세요")
print('반갑습니다')
print("나는 생각한다. '어렵구나'")
print("쌍따옴표 사용 \"") # \" 를 사용하여 쌍따옴표 출력
# 이스케이프 문자
# \n 줄바꿈
# \t 탭
# \" 쌍따옴표
# \' 따옴표
print('n\n\tt')
print('''안녕하세요
반갑습니다
잘 부탁드립니다
안녕히계세요''')

# 파이썬은 1 2 3 은 정수형(int형) 1.2 1.3 은 실수형(float형) 허수형(complex) 3가지로 구분 +,-도 구분 그리고 이 3가지를 묶어서 숫자형이라한다
# 정수는 디지털(점프), 실수는 아날로그(연속성) 아날로그에서 디지털로 바뀌면 데이터의 손실이 발생
# 전자회로를 이용한 고속의 자동계산기 = 컴퓨터(전자제품은 모두 컴퓨터라고 봐도 됨)
# 데이터단위 비트는 0, 1(On, Off) 2진법을 사용 2진법을 쓰는 이유는 전기의 유무로 동작을 하기에
# 11010100 = 212
# 문자열(string)
# 연산자 = 숫자 연산자와 다른 의미 -> 추상화
# + : 문자열 데이터를 연결
# * : 문자열 데이터를 반복
print("안녕하세요"+"반갑습니다")
print("안녕하세요"*5)
print("안녕하세요"+10) #에러출력 왜? 문자열과 숫자를 연결한 것은 정한 것이 없음

# 인덱싱(indexing)
# 전체 문자열에서 각 문자의 위리를 인덱스(index)라고 함
# 인덱스로 한 개의 문자를 선택하는 것을 인덱싱이라고 함
# 길이가 있는 다른 타입의 데이터에도 적용 가능
# 0부터 시작
print("Hello"[0])
print("Hello"[1])
print("Hello"[2])
print("Hello"[3])
print("Hello"[4])
